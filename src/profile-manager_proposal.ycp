/**
 * File:	clients/profile-manager_proposal.ycp
 * Package:	Configuration of profile-manager
 * Summary:	Proposal function dispatcher.
 * Authors:	Jiri Suchomel <jsuchome@suse.cz>
 *
 * $Id$
 *
 * Proposal function dispatcher for profile-manager configuration.
 */

{

textdomain "profile-manager";

import "ProfileManager";
import "Progress";

/* The main () */
y2milestone("----------------------------------------");
y2milestone("Profile-manager proposal started");

string func = WFM::Args(0);
map param = WFM::Args(1);
map ret = $[];

/* create a textual proposal */
if(func == "MakeProposal") {
    string proposal = "";
    string warning = nil;
    symbol warning_level = nil;
    boolean force_reset = param["force_reset"]:false;

    if(force_reset || !ProfileManager::proposal_valid) {
        ProfileManager::proposal_valid = true;
	Progress::off();
	ProfileManager::Read();
    }
    list sum = ProfileManager::Summary(false);
    proposal = select(sum, 0, "");
    Progress::on();

    ret = $[
	"preformatted_proposal" : proposal,
	"warning_level" : warning_level,
	"warning" : warning,
    ];
}
/* run the module */
else if(func == "AskUser") {
    map stored = ProfileManager::Export();
    symbol seq = WFM::CallFunction(`profile-manager(.propose));
    if(seq != `next) ProfileManager::Import(stored);
    y2debug("stored=%1",stored);
    y2debug("seq=%1",seq);
    ret = $[
	"workflow_sequence" : seq
    ];
}
/* create titles */
else if(func == "Description") {
    ret = $[
	"rich_text_title" :
        // RichText title
        _("Profile manager"),
	"menu_title" :
        // Menu title
        _("&Profile manager"),
	"id" : "profile-manager",
    ];
}
/* write the proposal */
else if(func == "Write") {
    ProfileManager::Write();
}
/* unknown function */
else {
    y2error("unknown function: %1", func);
}

/* Finish */
y2debug("ret=%1",ret);
y2milestone("Profile-manager proposal finished");
y2milestone("----------------------------------------");
return ret;

/* EOF */
}
