/**
 * File:	clients/profile-manager.ycp
 * Package:	Configuration of profile-manager
 * Summary:	Main file
 * Authors:	Jiri Suchomel <jsuchome@suse.cz>
 *
 * $Id$
 *
 * Main file for profile-manager configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of the profile-manager</h3>
 */

textdomain "profile-manager";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("Profile-manager module started");

import "Popup";
include "profile-manager/wizards.ycp";

/*
 * exit when running for non-root
 */

// FIXME use 'id -u' or Confirm::MustBeRoot
map res = (map) SCR::Execute(.target.bash_output, "/usr/bin/whoami", $[]);
list l_res = splitstring(res["stdout"]:"", "\n");

if( size(l_res) > 0 &&  select(l_res, 0, "") != "root")
{
    // Popup label (user is not root)
    Popup::Message(_("Log in as root to run Profile manager."));
    return nil;
}


/* is this proposal or not? */
boolean propose = false;
list args = WFM::Args();
if(size(args) > 0) {
    if(is(WFM::Args(0), path) && WFM::Args(0) == .propose) {
        y2milestone("Using PROPOSE mode");
        propose = true;
    }
    else
        y2error("Bad argument for profile-manager: %1", WFM::Args(0));
}

/* main ui function */
any ret = nil;

if(propose) ret = ProfileManagerAutoSequence();
else ret = ProfileManagerSequence();
y2debug("ret == %1", ret);

/* Finish */
y2milestone("Profile-manager module finished");
y2milestone("----------------------------------------");
return ret;

/* EOF */
}
